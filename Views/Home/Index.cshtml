@model WeatherNew.Models.ModelForView

<h1>Search</h1>

@using (@Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <div class="row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <input class="btn btn-success btn-block" type="submit" value="Search" />
            </div>
        </div>

    </div>
}
@*@Html.Partial("~/Views/OpenWeatherMapMvc/Weather.cshtml")*@


<table class="col-md-4 table table-striped table-hover table-bordered">
    <tr>
        <th>Weather Description</th>
    </tr>
    <tr>
        <td>Citi: @(Model.responseWeather.name ?? string.Empty)</td>
    </tr>
    <tr>
        <td>Country: @(Model.responseWeather.sys.country ?? string.Empty)</td>
    </tr>
    <tr>
        <td>Wind: @(Model.responseWeather.wind.speed.ToString() ?? string.Empty) Km</td>
    </tr>
    <tr>
        <td>Current Temperature: @(Model.responseWeather.main.temp.ToString() ?? string.Empty) °C</td>
    </tr>
    <tr>
        <td>Humidity: @(Model.responseWeather.main.humidity.ToString() ?? string.Empty)</td>
    </tr>
    <tr>
        <td>Weather: @(Model.responseWeather.weather[0].description ?? string.Empty)</td>
    </tr>

</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
